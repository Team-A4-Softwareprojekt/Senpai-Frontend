.cardsGridContainer {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    padding: 20px;
    max-width: 1200px;
    margin: 0 auto;
    
}
.selectCard {
    width: 300px; /* Set a fixed width */
    height: 400px; /* Set a fixed height */
    overflow: auto; /* Add scrollbars if content overflows */
    max-width: 100%; /* Allow cards to grow up to 100% of their parent container */
}

/* Optionally, you can style the inner content */
.selectCard .content {
    padding: 20px;
    /*box-sizing: border-box;*/ /* Include padding in the element's total width and height */
    overflow: hidden; /* Hide overflow content */
    text-overflow: ellipsis; /* Truncate text if it overflows */
    white-space: nowrap; /* Prevent text from wrapping */
}

.overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 99;
}

.popup {
    border: 3px solid white; /* Weißer Rahmen */
    position: fixed; /* Position fixed für zentrierte Ausrichtung */
    top: 50%; /* Zentriert vertikal */
    left: 50%; /* Zentriert horizontal */
    transform: translate(-50%, -50%); /* Verschiebt das Popup genau in die Mitte */
    width: 25%;
    height: 25%;
    min-width: 425px; /* Mindestbreite */
    min-height: 200px; /* Mindesthöhe */
    background-color: rgba(0, 0, 0, 1);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 100;
    margin-top: 200px; /* Abstand zu den SelectCards */

    pointer-events: auto; /* Macht das Popup interaktiv */
}

.popupContent {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 20px;
}

.popupContent h2 {
    margin: 10px;
}

.popupContent .highlighted {
    color: #ff6666; /* Hellrote Farbe */
}

.popupContent button {
    font-size: 18px; /* Schriftgröße des Buttons */
    padding: 10px 15px; /* Innenabstand des Buttons */
    display: flex;
    align-items: center;
    font-weight: bold;
    margin-top: 10px; /* Abstand zum Text */
    cursor: pointer;
}